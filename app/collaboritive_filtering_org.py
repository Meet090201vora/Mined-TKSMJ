# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SnYJCtwi3eopFyALJX3BK6CN4gHqRo7-
"""

import pandas as pd
import random
import sklearn
from sklearn.neighbors import NearestNeighbors
import operator


field_dict = {0:'Artificial Intelligence',
              1:'Machine Learning', 
              2:'Software Engineering',
              3:'Math',
              4:'Social and Information Networks',
              5:'Information Theory',
              6:'Data Structures',
              7:'Cryptography and Security',
              8:'Computer Vision',
              9:'Information Retrieval System'}
#field = ['Artificial Intelligence','Cloud Computing','Software Engineering','App Development','Physics']

dataf = pd.read_csv("rp_final.csv")

df =   pd.DataFrame({'user_0' : [0,0,3,4,2,1,2,0,5,1],
                      'user_1' : [3,0,1,3,0,0,0,0,0,0],
                      'user_2' : [0,3,0,4,0,2,0,0,0,2],
                      'user_3' : [5,2,3,2,0,4,3,3,0,0],
                      'user_4' : [0,5,5,0,0,0,0,0,5,4],
                      'user_5' : [0,0,0,0,4,0,4,2,3,0],
                      'user_6' : [4,4,0,0,4,4,3,4,0,4],
                      'user_7' : [5,0,4,2,3,0,3,3,3,3],
                      'user_8' : [0,3,0,0,5,5,0,4,0,0],
                      'user_9' : [2,0,0,0,0,0,0,0,4,0]})


df = df.T
# df

n = len(df)
id  = input("Enter yo id : ")



#old user
number_neighbors = 4
knn = NearestNeighbors(metric='cosine', algorithm='brute')
knn.fit(df.values)
distances, indices = knn.kneighbors(df.values, n_neighbors=number_neighbors)
distances

x = list(zip(distances[int(id)],indices[int(id)]))
# x

x.sort(key = lambda y: y[0])

arr = []
for i in range(len(x)):
    #print(str((x[i][1])))
    t=df.loc["user_"+str((x[i][1]))]
    #display(t)
    if len(arr)==0:
        arr.append(t.values)
    else:
        arr+=t.values
arr = arr/len(x)
# arr

enumerate_object = enumerate(arr[0][:])
sorted_pairs = sorted(enumerate_object, key=operator.itemgetter(1))

sorted_indices = []
for index, element in sorted_pairs:
    sorted_indices.append(index)
    sorted_indices.reverse()
# print(sorted_indices)

top_3 = sorted_indices[0:3] #top 3 users with which our field aligns

recommend_paper = []
for i in top_3:
  field_name = field_dict[i]
  print(field_name)
  blah = dataf[dataf['Field']==field_name].sort_values(by='Citations',ascending = False)
  for i in blah.index.values[0:2]:
    recommend_paper.append(i)

recommend_paper





"""**UPDATING RATINGS DYNAMICALLY**"""

x = input("Enter your ratings : ")  #can use checkbox
df.at['user_4', 0] = x





















