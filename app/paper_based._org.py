# -*- coding: utf-8 -*-
"""paper_based.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1xRXkerQ4cG2T6KSb12AUczBYXvHrhz
"""

import pandas as pd
import random
import sklearn
from sklearn.neighbors import NearestNeighbors
import operator

dataf = pd.read_csv("rp_final1.csv")

rows = [[random.randint(0,5), random.randint(0,5),random.randint(0,5), random.randint(0,5),random.randint(0,5), random.randint(0,5),random.randint(0,5), random.randint(0,5),random.randint(0,5), random.randint(0,5)] for i in range(2,176)]
df = pd.DataFrame(rows, columns=["user_0","user_1","user_2","user_3","user_4","user_5","user_6","user_7","user_8","user_9"])
df = df.T
df

n = len(df)
id  = input("Enter yo id : ")

number_neighbors = 4
knn = NearestNeighbors(metric='cosine', algorithm='brute')
knn.fit(df.values)
distances, indices = knn.kneighbors(df.values, n_neighbors=number_neighbors)
distances

x = list(zip(distances[int(id)],indices[int(id)]))
x

x.sort(key = lambda y: y[0])

arr = []
for i in range(len(x)):
    #print(str((x[i][1])))
    t=df.loc["user_"+str((x[i][1]))]
    #display(t)
    if len(arr)==0:
        arr.append(t.values)
    else:
        arr+=t.values
arr = arr/len(x)
arr

enumerate_object = enumerate(arr[0][:])
sorted_pairs = sorted(enumerate_object, key=operator.itemgetter(1))

sorted_indices = []
for index, element in sorted_pairs:
    sorted_indices.append(index)
    sorted_indices.reverse()
print(sorted_indices)

top_5 = sorted_indices[0:5] #top 5 users with which our field aligns
top_5

for i in top_5:
  display(dataf.iloc[172])





